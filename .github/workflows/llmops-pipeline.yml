name: LLMOps Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-scan-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout code
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2️⃣ Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3️⃣ Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 4️⃣ Build and push Docker image
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: |
          chingyee001120/fastapi-app:latest
          chingyee001120/fastapi-app:${{ github.sha }}

    # 5️⃣ Scan image with Trivy
    - name: Scan Docker image with Trivy
      uses: aquasecurity/trivy-action@0.12.0
      with:
        image-ref: chingyee001120/fastapi-app:latest
        format: table
        exit-on-vuln: false
        timeout: 15m
        scan-type: image
        ignore-unfixed: false

    # 6️⃣ Install and authenticate DigitalOcean CLI (doctl)
    - name: Install doctl
      run: |
        curl -sL https://github.com/digitalocean/doctl/releases/download/v1.114.0/doctl-1.114.0-linux-amd64.tar.gz -o doctl.tar.gz
        tar -xzf doctl.tar.gz
        sudo mv doctl /usr/local/bin
        doctl version

    - name: Authenticate doctl
      run: doctl auth init -t ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    # 7️⃣ Save kubeconfig from DigitalOcean
    - name: Save kubeconfig
      run: doctl kubernetes cluster kubeconfig save my-cluster

    # 8️⃣ Deploy to Kubernetes
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f deployment.yml --validate=false
        kubectl apply -f service.yml --validate=false
        kubectl rollout status deployment/gpt-huggingface
